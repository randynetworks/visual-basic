<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>